--Database exploration
select *
from INFORMATION_SCHEMA.TABLES
where TABLE_SCHEMA = 'gold';


-- Dimentions Exploration

--explore all countries our customers come from
select distinct country 
from gold.dim_customers;

--explore all categories the major divisions
select distinct category, subcategory, product_name
from gold.dim_products
order by 1, 2, 3;

--Date exploration

select max(order_date) as 'latest order', min(order_date) AS 'earliest order', DATEDIFF(year, min(order_date), max(order_date)) as 'order range year'
from gold.fact_sales ;

--select n oldest and youngest customer

select top 5 birthdate as Birth_Year
from gold.dim_customer where birthdate is not NULL
order by birthdate desc;


-- Measure exploration

-- Find the Total Sales

select 
sum(sales_amount) as total_sales,
from gold.fact_sales;

-- Find how many items are sold
select
sum(quantity) as total_items_sold
from gold.fact_sales;

-- Find the average selling price
select 
avg(sales_amount) as avg_sales_amount
from gold.fact_sales;

-- Find the Total number of Orders
select 
count(distinct order_num) as total_orders
from gold.fact_sales;

-- Find the total number of products
select 
count(distinct product_key) as total_products
from gold.dim_products;

-- Find the total number of customers
select
count(customer_key) as total_customers
from gold.dim_customer;

-- Find the total number of customers that has placed an order
select
count(customer_key) as total_customers
from gold.fact_sales;

-- Generate a report that shows all key metrics of the business 

select 
'Total Sales' as measure_name,
sum(sales_amount) as measure_value
from gold.fact_sales
UNION ALL
select 
'Total Quantity' as measure_name,
sum(quantity) as measure_value
from gold.fact_sales
UNION ALL
select 
'Average Value' as measure_name,
avg(sales_amount) as measure_value
from gold.fact_sales
UNION ALL
select 
'Total Orders' as measure_name,
count(distinct order_num) as measure_value
from gold.fact_sales
UNION ALL
select 
'Total Products' as measure_name,
count(distinct product_key) as measure_value
from gold.dim_products
UNION ALL
select 
'Total Customers' as measure_name,
count(distinct customer_key) as measure_value
from gold.dim_customer;


--Magnitude Analysis


-- Find total customers by countries
select
country,
count(customer_key) as total_customers
from gold.dim_customer
group by country
order by total_customers DESC;

-- Find total customers by gender
select
gender,
count(customer_key) as total_customers
from gold.dim_customer
where gender != 'N/A'
group by gender;

-- Find total products by category
select
category,
count(product_key) as total_products
from gold.dim_products
group by category;

-- What is the average costs in each category?
select
category,
avg(COST) as avg_cost
from gold.dim_products
group by category;

-- What is the total revenue generated for each category?
select
category,
sum(sales_amount) as total_sales
from gold.fact_sales sl join gold.dim_products pr 
on pr.product_key = sl.product_key
group by category;


--category components has no sales
select
*
from  gold.fact_sales sl inner join gold.dim_products pr
on pr.product_key = sl.product_key
where category = 'Components';


-- Find total revenue is generated by each customer
select
cr.customer_key,
cr.first_name,
cr.last_name,
sum(sales_amount) as total_revenue
from gold.fact_sales sl join gold.dim_customer cr 
on cr.customer_key = sl.customer_key
group by 
cr.customer_key,
cr.first_name,
cr.last_name
order by total_revenue DESC;

-- What is the distribution of sold items across countries?

select
cr.country,
pr.category,
pr.subcategory,
sum(sl.quantity) as total_sold_items
from gold.fact_sales sl join gold.dim_customer cr
on cr.customer_key = sl.customer_key
join gold.dim_products pr 
on pr.product_key = sl.product_key
group by 
	cr.country,
	pr.category,
	pr.subcategory
order by country ASC, total_sold_items DESC; 



-- Ranking Analysis

-- Which are 5 top revenue generating products

select top 5
	pr.product_key,
	pr.product_name,
	pr.subcategory,
	sum(sales_amount) as revenue
from 
	gold.dim_products pr join gold.fact_sales sl
		on pr.product_key = sl.product_key
group by 
	pr.product_key,
	pr.product_name,
	pr.subcategory
order by
	revenue DESC;

--using window function
select * 
from (
	select
		pr.product_key,
		pr.product_name,
		pr.subcategory,
		sum(sales_amount) as revenue,
		row_number() OVER (order by sum(sales_amount) DESC) as rank_products
	from 
		gold.dim_products pr join gold.fact_sales sl
			on pr.product_key = sl.product_key
	group by 
		pr.product_key,
		pr.product_name,
		pr.subcategory
		)t
where rank_products <= 5


-- Which are 5 worst revenue generating products

select top 5
	pr.product_key,
	pr.product_name,
sum(sales_amount) as revenue
from 
	gold.dim_products pr join gold.fact_sales sl
		on pr.product_key = sl.product_key
group by 
	pr.product_key,
	pr.product_name
order by
	revenue DESC



--find 10 customers who have generated the highest revenue
select top 10
cr.customer_key,
cr.first_name,
cr.last_name,
sum(sales_amount) as total_revenue
from gold.fact_sales sl join gold.dim_customer cr 
on cr.customer_key = sl.customer_key
group by 
cr.customer_key,
cr.first_name,
cr.last_name
order by total_revenue DESC;


--using window function
select * 
from (
	select
		cr.customer_key,
		cr.first_name,
		cr.last_name,
		sum(sales_amount) as total_revenue,
		row_number() OVER (order by sum(sales_amount) DESC) as rank_
	from 
		gold.fact_sales sl join gold.dim_customer cr 
			on cr.customer_key = sl.customer_key
	group by 
		cr.customer_key,
		cr.first_name,
		cr.last_name)t
where rank_<=10;


-- 3 customers with fewest orders placed
select * 
from (
	select
		cr.customer_key,
		cr.first_name,
		cr.last_name,
		count(order_num) as total_order,
		row_number() OVER (order by count(order_num) ASC) as rank_
	from 
		gold.fact_sales sl join gold.dim_customer cr 
			on cr.customer_key = sl.customer_key
	group by 
		cr.customer_key,
		cr.first_name,
		cr.last_name)t
where rank_<=10;